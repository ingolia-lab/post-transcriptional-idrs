scale_color_viridis() +
facet_wrap(~id,ncol = 5) +
xlab('Predicted Score (linear)') + ylab('Number di-aromatics') +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
diAro_real
library(ggplot2)
library(ggpubr)
library(viridis)
library(ggpointdensity)
library(stringr)
setwd("~/Ingolia_lab/iJL_experiments/2025January/iJL372/")
f_names = list.files(pattern = '/*.csv')
f_list = lapply(f_names, read.csv)
names = sapply(strsplit(f_names,'_'),'[[',1)
for(i in 1:length(names)){
f_list[[i]]['id'] = names[i]
}
df = do.call(rbind, f_list)
df$id= factor(df$id, levels=c('Sgn1','sup35','Rim4','Mrn1','Ngr1'))
omega_plot_scrams = ggplot(df, aes(x=score,y=omega_aro)) +   geom_pointdensity(size=1) +
scale_color_viridis() +
facet_wrap(~id,ncol = 5) +
xlab('Predicted Score (linear)') + ylab('Omega, aromatic') +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
target_dipeps = function(resis = c('W','F','Y')){
dipeps = expand.grid(resis,resis)
dipeps = paste0(dipeps$Var1, dipeps$Var2)
return(dipeps) #pattern matching later
}
count_dipeps = function(pep, diAros = target_dipeps()){
pattern_len = nchar(diAros[1]) #get pattern llength (2 for dipep)
dipeps = c()
for(i in 1:(nchar(pep)-pattern_len+1)){
dipeps[i] = substr(pep,i,(i+pattern_len-1))
}
counts = sum(str_count(dipeps,paste0(diAros,collapse='|'))) #pipe lets match to any dipep
return(counts)
}
df$diAro_count = sapply(df$seq,count_dipeps)
diAro_simulated = ggplot(df, aes(x=score,y=diAro_count)) + geom_pointdensity(size=1) +
scale_color_viridis() +
facet_wrap(~id,ncol = 5) +
xlab('Predicted Score (linear)') + ylab('Number di-aromatics') +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
#now, check on real composition_driven repressors
dms = read.csv('~/post-transcriptional-idrs/processed_scores/dms_scores.csv')
compo = read.csv('~/post-transcriptional-idrs/HMM_analysis/composition.csv')
dms$parent = paste0(sapply(strsplit(dms$Name,'_'),'[[',1),'_',
sapply(strsplit(dms$Name,'_'),'[[',2),'_',
sapply(strsplit(dms$Name,'_'),'[[',3))
dms_seqs = read.csv('~/post-transcriptional-idrs/sequence_tables_dna/Table_S4_Mut.csv')
dms = dms[dms$parent %in% compo$pep & grepl('WT|scramble',dms$Name),]
dms = dms[dms$avg_stability >= -1,]
dms$pepSeq = dms_seqs$pepSeq[match(dms$Name, dms_seqs$name)]
dms$dipeps = sapply(dms$pepSeq,count_dipeps)
diAro_real = ggplot(dms, aes(x=avg_activity,y=dipeps)) + geom_pointdensity(size=1) +
scale_color_viridis() +
xlab('Predicted Score (linear)') + ylab('Number di-aromatics') +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
diAro_real
setwd("~/Ingolia_lab/iJL_experiments/2024October/iJL352/")
scores = read.csv('~/Ingolia_lab/iJL_experiments/2024October/iJL352/iJL352_stableScores_quant10.csv')
head(scores)
scores$dipep = sapply(scores$pep_seq,count_dipeps)
head(scores)
diAro_SgnRim = ggplot(dms, aes(x=activity_joint,y=dipeps)) + geom_pointdensity(size=1) +
scale_color_viridis() +
xlab('Predicted Score (linear)') + ylab('Number di-aromatics') +
facet_wrap(~parent)
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
diAro_SgnRim = ggplot(dms, aes(x=activity_joint,y=dipeps)) + geom_pointdensity(size=1) +
scale_color_viridis() +
xlab('Predicted Score (linear)') + ylab('Number di-aromatics') +
facet_wrap(~parent) +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
diAro_SgnRim
diAro_SgnRim = ggplot(scores, aes(x=activity_joint,y=dipeps)) + geom_pointdensity(size=1) +
scale_color_viridis() +
xlab('Predicted Score (linear)') + ylab('Number di-aromatics') +
facet_wrap(~parent) +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
diAro_SgnRim
diAro_SgnRim = ggplot(scores, aes(x=activity_joint,y=dipep)) + geom_pointdensity(size=1) +
scale_color_viridis() +
xlab('Predicted Score (linear)') + ylab('Number di-aromatics') +
facet_wrap(~parent) +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
diAro_SgnRim
library(ggplot2)
library(ggpubr)
library(viridis)
library(ggpointdensity)
library(stringr)
setwd("~/Ingolia_lab/iJL_experiments/2025January/iJL372/")
f_names = list.files(pattern = '/*.csv')
f_list = lapply(f_names, read.csv)
names = sapply(strsplit(f_names,'_'),'[[',1)
for(i in 1:length(names)){
f_list[[i]]['id'] = names[i]
}
df = do.call(rbind, f_list)
df$id= factor(df$id, levels=c('Sgn1','sup35','Rim4','Mrn1','Ngr1'))
omega_plot_scrams = ggplot(df, aes(x=score,y=omega_aro)) +   geom_pointdensity(size=1) +
scale_color_viridis() +
facet_wrap(~id,ncol = 5) +
xlab('Predicted Score (linear)') + ylab('Omega, aromatic') +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
target_dipeps = function(resis = c('W','F','Y')){
dipeps = expand.grid(resis,resis)
dipeps = paste0(dipeps$Var1, dipeps$Var2)
return(dipeps) #pattern matching later
}
count_dipeps = function(pep, diAros = target_dipeps()){
pattern_len = nchar(diAros[1]) #get pattern llength (2 for dipep)
dipeps = c()
for(i in 1:(nchar(pep)-pattern_len+1)){
dipeps[i] = substr(pep,i,(i+pattern_len-1))
}
counts = sum(str_count(dipeps,paste0(diAros,collapse='|'))) #pipe lets match to any dipep
return(counts)
}
df$diAro_count = sapply(df$seq,count_dipeps)
diAro_simulated = ggplot(df, aes(x=score,y=diAro_count)) + geom_pointdensity(size=1) +
scale_color_viridis() +
facet_wrap(~id,ncol = 5) +
xlab('Predicted Score (linear)') + ylab('Number di-aromatics') +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
#now, check on real composition_driven repressors
dms = read.csv('~/post-transcriptional-idrs/processed_scores/dms_scores.csv')
compo = read.csv('~/post-transcriptional-idrs/HMM_analysis/composition.csv')
dms$parent = paste0(sapply(strsplit(dms$Name,'_'),'[[',1),'_',
sapply(strsplit(dms$Name,'_'),'[[',2),'_',
sapply(strsplit(dms$Name,'_'),'[[',3))
dms_seqs = read.csv('~/post-transcriptional-idrs/sequence_tables_dna/Table_S4_Mut.csv')
dms = dms[dms$parent %in% compo$pep & grepl('WT|scramble',dms$Name),]
dms = dms[dms$avg_stability >= -1,]
dms$pepSeq = dms_seqs$pepSeq[match(dms$Name, dms_seqs$name)]
dms$dipeps = sapply(dms$pepSeq,count_dipeps)
diAro_real = ggplot(dms, aes(x=avg_activity,y=dipeps)) + geom_pointdensity(size=1) +
scale_color_viridis() +
xlab('Predicted Score (linear)') + ylab('Number di-aromatics') +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
diAro_real
diAro_simulated
head(dms)
diAro_simulated = ggplot(df, aes(x=score,y=diAro_count)) + geom_pointdensity(size=1) +
scale_color_viridis() +
facet_wrap(~id,ncol = 5) +
xlab('Predicted Score (linear)') + ylab('Number di-aromatics') +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
#aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
diAro_real
diAro_real = ggplot(dms, aes(x=avg_activity,y=dipeps)) + geom_pointdensity(size=1) +
scale_color_viridis() +
xlab('Activity Score') + ylab('Number di-aromatics') +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
diAro_real
diAro_SgnRim
scores = read.csv('~/Ingolia_lab/iJL_experiments/2024October/iJL352/iJL352_stableScores_quant10.csv')
scores$dipep = sapply(scores$pep_seq,count_dipeps)
diAro_SgnRim = ggplot(scores, aes(x=activity_joint,y=dipep)) + geom_pointdensity(size=1) +
scale_color_viridis() +
xlab('Predicted Score (linear)') + ylab('Number di-aromatics') +
facet_wrap(~parent) +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
diAro_SgnRim
head(scores)
unique(scores$short_annot)
subScores = scores[grepl('cluster|randomScramble|alpha'),]
diAro_CSA = ggplot(subScores, aes(x=activity_joint,y=dipep)) + geom_pointdensity(size=1) +
scale_color_viridis() +
xlab('Predicted Score (linear)') + ylab('Number di-aromatics') +
facet_wrap(~parent) +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
subScores = scores[grepl('cluster|randomScramble|alpha',scores$short_annot),]
diAro_CSA = ggplot(subScores, aes(x=activity_joint,y=dipep)) + geom_pointdensity(size=1) +
scale_color_viridis() +
xlab('Predicted Score (linear)') + ylab('Number di-aromatics') +
facet_wrap(~parent) +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
diAro_CSA
diAro_SgnRim = ggplot(scores, aes(x=activity_joint,y=dipep)) + geom_pointdensity(size=1) +
scale_color_viridis() +
xlab('Measured Activity Score') + ylab('Number di-aromatics') +
facet_wrap(~parent) +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
subScores = scores[grepl('cluster|randomScramble|alpha',scores$short_annot),]
diAro_CSA = ggplot(subScores, aes(x=activity_joint,y=dipep)) + geom_pointdensity(size=1) +
scale_color_viridis() +
xlab('Predicted Score (linear)') + ylab('Number di-aromatics') +
facet_wrap(~parent) +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
diAro_SgnRim = ggplot(scores, aes(x=activity_joint,y=dipep)) + geom_pointdensity(size=1) +
scale_color_viridis() +
xlab('Measured Activity Score') + ylab('Number di-aromatics') +
facet_wrap(~parent) +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
subScores = scores[grepl('cluster|randomScramble|alpha',scores$short_annot),]
diAro_CSA = ggplot(subScores, aes(x=activity_joint,y=dipep)) + geom_pointdensity(size=1) +
scale_color_viridis() +
xlab('Measured Activity Score') + ylab('Number di-aromatics') +
facet_wrap(~parent) +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
diAro_CSA
diAro_SgnRim
diAro_CSA
nrow(diAro_real)
nrow(dms)
library(cowplot)
head(df)
nrow(df)
df = df[,c('seq','score','id')]
write.csv("~/post-transcriptional-idrs/suppFigs/suppFig_6/randomShuffles_diaros/scoredShuffles.csv")
write.csv(df,"~/post-transcriptional-idrs/suppFigs/suppFig_6/randomShuffles_diaros/scoredShuffles.csv")
write.csv(df,"~/post-transcriptional-idrs/suppFigs/suppFig_6/randomShuffles_diaros/scoredShuffles.csv", row.names = FALSE)
write.csv(df,"~/post-transcriptional-idrs/suppFigs/suppFig_6/randomShuffles_diaros/scoredShuffles.csv", row.names = FALSE)
setwd("~/post-transcriptional-idrs/suppFigs/suppFig_6/randomShuffles_diaros/")
library(ggplot2)
library(ggpubr)
library(viridis)
library(ggpointdensity)
library(stringr)
library(cowplot)
#shuffled seqs are Sgn1_151_200, Mrn1p_61_110, Ngr1p_510_559, Rim4p_602_651,Sup35p_41_90
setwd("~/post-transcriptional-idrs/suppFigs/suppFig_6/randomShuffles_diaros/")
df = read.csv('scoredShuffles.csv')
head(df)
library(ggplot2)
library(ggpubr)
library(viridis)
library(ggpointdensity)
library(stringr)
library(cowplot)
#shuffled seqs are Sgn1_151_200, Mrn1p_61_110, Ngr1p_510_559, Rim4p_602_651,Sup35p_41_90
setwd("~/post-transcriptional-idrs/suppFigs/suppFig_6/randomShuffles_diaros/")
df = read.csv('scoredShuffles.csv')
#count occurrences of diaromatics . str_count will return 1 for FWY, where you'd want 2,
#these functions deal with correctly counting dipeps for this purpose (eg. FW + WY)
#currently only does dipeps
target_dipeps = function(resis = c('W','F','Y')){
dipeps = expand.grid(resis,resis)
dipeps = paste0(dipeps$Var1, dipeps$Var2)
return(dipeps) #pattern matching later
}
count_dipeps = function(pep, diAros = target_dipeps()){
pattern_len = nchar(diAros[1]) #get pattern length (2 for dipep), all grids are same
dipeps = c()
for(i in 1:(nchar(pep)-pattern_len+1)){
dipeps[i] = substr(pep,i,(i+pattern_len-1))
}
counts = sum(str_count(dipeps,paste0(diAros,collapse='|')))
return(counts)
}
df$diaro_count = sapply(df$seq,count_dipeps)
head(df)
diAro_simulated = ggplot(df, aes(x=score,y=diAro_count)) + geom_pointdensity(size=1) +
scale_color_viridis() +
facet_wrap(~id,ncol = 5) +
xlab('Predicted Score (linear)') + ylab('Number di-aromatics') +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
#aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
diAro_simulated
diAro_simulated = ggplot(df, aes(x=score,y=diaro_count)) + geom_pointdensity(size=1) +
scale_color_viridis() +
facet_wrap(~id,ncol = 5) +
xlab('Predicted Score (linear)') + ylab('Number di-aromatics') +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
#aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
diAro_simulated
diAro_simulated = ggplot(df, aes(x=score,y=diaro_count)) + geom_pointdensity(size=1) +
scale_color_viridis() +
facet_wrap(~id,ncol = 5) +
xlab('Predicted Score (linear)') + ylab('Number di-aromatics') +
stat_cor(method="pearson") +
theme_classic() +
theme(panel.grid = element_blank(),
axis.line = element_line(color = "black"),
axis.ticks = element_line(color = "black",),
axis.ticks.length = unit(0.1,'cm'),
legend.position = "none",
aspect.ratio = 1,
panel.border = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 14))
diAro_simulated
install.packages("ggExtra")
install.packages("ggExtra")
install.packages("ggExtra")
install.packages("ggExtra")
library(ggExtra)
install.packages("ggExtra")
ggMarginal
library(ggExtra)
install.packages("devtools")
devtools::install_github("daattali/ggExtra")
